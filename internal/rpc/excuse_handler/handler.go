package excuse_handler

import (
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"math/rand"
	"tgram-slo-bot/internal"
)

type Excuses struct {
	Names   []string
	Hello   []string
	Fail    []string
	Action  []string
	Date    []string
	General []string
}

type Handler struct {
	log internal.Logger
}

func New(log internal.Logger) *Handler {
	return &Handler{
		log: log,
	}
}

var (
	excuses = Excuses{
		Names:   []string{"Друг", "Товарищ", "Заказчик", "Приятель", "Уважаемый начальник"},
		Hello:   []string{", привет", ", здравствуй", ", приветствую", ", добрый день", ", добрый вечер", ", доброе утро", "Здравствуй, ", "Привет, "},
		Fail:    []string{"Самолет, в котором я летел, приземлился на запаснике в Новгороде", "Я ехал в поезде, и кто-то сорвал стопкран, я резко упал и ударился головой, сейчас в больнице", "Я поймал попутку, её остановила ГИБДД, и нашли крупную партию наркотиков. Сейчас я под следствием", "Я вышел из дома, а дверь захлопнулась, я попытался залезть через балкон, но упал. Сейчас я в травмпункте, иду на поправку", "Я шел по парку, и на меня напал бомж, он украл у меня кошелек и ключи от дома. Хорошо, хоть что не изнасиловал", "У меня развалилась кровать во время сна, я повредил позвоночник. Сейчас иду на поправку", "Я потерял паспорт", "Я на похоронах был, последний дедушка умер", "У меня рак нашли, я по больницам ездил", "У меня рак печени, к сожалению, серьезно, я сейчас химиотерапию прохожу", "Я потерял всё, что было в портмоне", "Меня избили цыгане", "Я просто в глуши был", "Я просто был не в городе", "Меня отправили по делам", "Твой банк отклонил перевод", "Мой счет заблокировали", "Я потерял ноутбук", "У меня сломался компьютер", "Меня машина сбила", "Я немного не успеваю", "Я сейчас работаю по фрилансу", "Скоро стартап окупится", "Бабушка скоро пенсию получит", "Деньги вернул твой банк, пишет отказ, проверь номер карты", "Платеж на обработке", "Платеж отклонен, буду ругаться с банком", "Меня в армию забрали", "У меня кошка рожала", "У меня дочь родила", "У меня молоко убежало", "У меня квартира сгорела", "Я недооценил задачу", "Я недооценил масштаб задачи", "Я столкнулся с непредвиденными сложностями"},
		Action:  []string{"Я сделаю всё", "Вышлю часть", "Постараюсь", "Доберусь и всё сделаю", "Смогу сделать всё", "Я закончу", "Я доделаю", "Я исправлю", "Согласую всё", "Объясню всё подробнее", "Смогу отослать", "Смогу решить этот вопрос", "Смогу доделать", "Смогу закончить", "Сделаю перевод", "Переведу", "Приеду", "Я лично встречусь с тобой", "Я разберусь с этим", "Я разгребу это", "Решу всё", "Отправлю", "Скину", "Доеду до дома", "Приеду домой", "Закрою этот вопрос", "Попробую", "Давай встретимся", "Давай наличкой отдам"},
		Date:    []string{"сейчас", "завтра", "завтра вечером", "завтра днем", "завтра утром", "как можно быстрее", "как можно скорее", "наконец-то", "чуть позже", "позже", "около 2 суток", "в конце недели", "в конце месяца", "в конце дня", "до конца следующей недели", "до завтра", "послезавтра", "ближе к вечеру", "ближе к утру", "с утра", "завтра крайний срок", "на неделе", "через пару дней", "скоро", "сразу", "сейчас, в течение 3-4 дней"},
		General: []string{"Хочу закрыть вопрос поскорее", "Сам уже устал ждать", "Я бы с радостью уже все сделал", "Сам в шоке, что так всё получилось", "Сам в шоке, что так всё затягивается", "Сам не ожидал таких событий", "Надо поскорее решить этот вопрос", "Надо уже закрыть этот вопрос", "Надо уже решить эту проблему", "Я, конечно, очень извиняюсь, что так вышло"},
	}
	excuseName = "Ребята"
)

func excuseGenerator(name string) string {
	helloString := excuses.Hello[rand.Intn(len(excuses.Hello))]
	failString := excuses.Fail[rand.Intn(len(excuses.Fail))]
	actionString := excuses.Action[rand.Intn(len(excuses.Action))]
	dateString := excuses.Date[rand.Intn(len(excuses.Date))]
	generalString := excuses.General[rand.Intn(len(excuses.General))]

	return fmt.Sprintf("%s%s. %s. %s %s. %s", name, helloString, failString, actionString, dateString, generalString)
}

func (h *Handler) Handle(update *tgbotapi.Update, bot *tgbotapi.BotAPI) {
	msg := tgbotapi.NewMessage(update.FromChat().ID, excuseGenerator(excuseName))
	_, _ = bot.Send(msg)
}
